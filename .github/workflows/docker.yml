name: Jekyll site CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  develop_build:
    runs-on: ubuntu-latest
    env:
      # 此处可修改为你任意 docker 镜像仓库地址和用户名
      DOCKER_REGISTRY: registry.cn-hangzhou.aliyuncs.com
      DOCKER_USERNAME: seepine

    steps:
      - name: 拉取最新提交的代码
        uses: actions/checkout@v3

      # java环境
      - name: 设置java环境
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
          # 缓存gradle，若是使用maven构建，改为maven即可，具体可查看 https://github.com/actions/setup-java 3
          cache: maven

      # 动态生成自定义的 settings.xml 文件，配置 Maven 源
      - name: 配置 Maven 源
        run: |
          mkdir -p ~/.m2
          echo '<settings><mirrors><mirror><id>aliyunmaven</id><mirrorOf>central</mirrorOf><name>Aliyun Maven</name><url>https://maven.aliyun.com/repository/public</url><blocked>false</blocked></mirror></mirrors></settings>' > ~/.m2/settings.xml

      - name: 项目打包
        run: mvn -B package

      - name: 打包镜像
        run: |
          docker build -t username/my-app:${{ github.sha }} .
          docker tag username/my-app:${{ github.sha }} username/my-app:latest
          

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Alibaba Cloud Container Registry
        env:
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}
        run: echo "${{ secrets.DOCKER_PASSWORD  }}" | docker login --username=${{ secrets.DOCKER_USERNAME }}  ${{ secrets.DOCKER_REGISTRY }} --password-stdin

      # 推送镜像到 Docker 仓库
      - name: 推送镜像到仓库
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/username/my-app:${{ github.sha }}
          docker push ${{ env.DOCKER_REGISTRY }}/username/my-app:latest