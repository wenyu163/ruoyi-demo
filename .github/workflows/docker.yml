name: Jekyll site CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  develop_build:
    runs-on: ubuntu-latest
    env:
      # 此处可修改为你任意 docker 镜像仓库地址和用户名
      DOCKER_NAME: joker_xiali/spring_demo
      # 此处可修改为你任意 docker 镜像仓库地址和用户名
      DOCKER_REGISTRY: crpi-9mzxaa7skdindffj.cn-chengdu.personal.cr.aliyuncs.com
      DOCKER_USERNAME: 兜兜里没有糖呀

    steps:
      - name: 拉取最新提交的代码
        uses: actions/checkout@v3

      # java环境
      - name: 设置java环境
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
          # 缓存gradle，若是使用maven构建，改为maven即可，具体可查看 https://github.com/actions/setup-java 3
          cache: maven

      # 动态生成自定义的 settings.xml 文件，配置 Maven 源
      - name: 配置 Maven 源
        run: |
          mkdir -p ~/.m2
          echo '<settings><mirrors><mirror><id>aliyunmaven</id><mirrorOf>central</mirrorOf><name>Aliyun Maven</name><url>https://maven.aliyun.com/repository/public</url><blocked>false</blocked></mirror></mirrors></settings>' > ~/.m2/settings.xml

      - name: 项目打包
        run: mvn -B package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Alibaba Cloud Container Registry
        env:
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD  }}
        run: echo "${{ secrets.DOCKER_PASSWORD  }}" | docker login --username=${{ secrets.DOCKER_USERNAME }}  ${{ secrets.DOCKER_REGISTRY }} --password-stdin

      # 生成名称和版本，例如 seepine/springboot-demo ，由发布 v1.2.5 触发，则分别为
      # REPO_NAME=springboot-demo
      # REPO_VERSION=1.2.5
      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT
          echo REPO_VERSION=$(echo ${{ github.ref }} | awk -F"/" '{print $3}' | awk -F"v" '{print $2}') >> $GITHUB_OUTPUT  

      # 打包构建
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          # 即最终打包成例如 registry.cn-hangzhou.aliyuncs.com/seepine/springboot-demo:latest
          # 和 registry.cn-hangzhou.aliyuncs.com/seepine/springboot-demo:1.2.5
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ steps.meta.outputs.REPO_NAME }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ steps.meta.outputs.REPO_NAME }}:${{ steps.meta.outputs.REPO_VERSION }}
          cache-from: type=local,src=/opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache
          cache-to: type=local,dest=/opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache-new,mode=max